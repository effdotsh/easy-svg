derives:
  FillAndStroke:
    fields:
      fill: { type: "Option<Color>" }
      stroke: { type: "Option<Color>" }
  xy:
    fields:
      x: { type: "Option<f64>" }
      y: { type: "Option<f64>" }

element_types:
  AnimationElement: { }
  BasicShape: { }
  ContainerElement: { }
  DescriptiveElement: { }
  FilterPrimitiveElement: { }
  GradientElement: { }
  GraphicsElement: { }
  GraphicsReferencingElement: { }
  LightSourceElement: { }
  NeverRenderedElement: { }
  PaintServerElement: { }
  RenderableElement: { }
  ShapeElement: { }
  StructuralElement: { }
  TextContentElement: { }
  TextContentChildElement: { }
  UncategorizedElement: { }


elements:
  #TODO(effdotsh): Commenting out for not fields that take either vectors or some special types while creating a better system. These need to be added
  a:
    element_types: [ "ContainerElement" ]
    derives: [ ]
    valid_child_types: [ "AnimationElement", "DescriptiveElement", "ShapeElement", "StructuralElement", "GradientElement", "Rect" ]
    fields: {
      download: { type: "Option<String>" },
      href: { type: "Option<String>" },
      hreflang: { type: "Option<String>" },
      #      ping: { type: "Option<Vec<String>>", is_experimental: true },
      referrerpolicy: { type: "Option<String>" },
      # rel: { type: "Option<Vec<String>>" },
      target: { type: "Option<Target>" },
      #      todo(effdotsh): "type" is conflicting with the type keyword
      #      type: { type: "Option<String>" }
      #      "xlink:href": { type: "Option<String>", is_deprecated: "true" }
    }
  #  animate:
  #    element_types: [ "AnimationElement" ]
  #    derives: [ ]
  #    valid_child_types: [ "AnimationElement", "DescriptiveElement", "ShapeElement", "StructuralElement", "GradientElement", "Rect" ]
  #    fields: {
  #
  #    }
  animateMotion:
    element_types: [ "AnimationElement" ]
    derives: [ ]
    valid_child_types: [ "DescriptiveElement", "Mpath" ]
    fields:
      keyPoints: { type: "Option<f64>" },
      path: { type: "Option<String>" },
      #      rotate: {type: "Option<Rotate>"}

  #  animateTransform:
  #    element_types: [ "AnimationElement" ]
  #    derives: [ ]
  #    valid_child_types: [ "DescriptiveElement", ]
  #    fields: { }
  animateTransform:
    element_types: [ "AnimationElement" ]
    derives: [ ]
    valid_child_types: [ "AnimationElement", "DescriptiveElement", "ShapeElement", "StructuralElement", "GradientElement", "Rect" ]
    fields: { }



  circle:
    element_types: [ "BasicShape" ]
    derives: [ "FillAndStroke" ]
    valid_child_types: [ "AnimationElement", "DescriptiveElement" ]
    fields:
      cx: { type: "Option<f64>" }
      cy: { type: "Option<f64>" }
      r: { type: "Option<f64>" }
  rect:
    element_types: [ "BasicShape" ]
    derives: [ "FillAndStroke", "xy" ]
    valid_child_types: [ "AnimationElement", "DescriptiveElement" ]
    fields:
      width: { type: "Option<f64>" }
      height: { type: "Option<f64>" }
